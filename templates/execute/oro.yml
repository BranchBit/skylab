
before_build:
  - steps:
    - mkdir -p app/cache
    - if [ "yes" = "%fetch_mysql%" ] && [ "yes" = "%run_mysql%" ]; then ssh-keyscan -p %dbsource_port% %dbsource_server% >> %home%/.ssh/known_hosts; fi
    - if [ "yes" = "%fetch_mysql%" ] && [ "yes" = "%run_mysql%" ]; then scp -P %dbsource_port% "%dbsource_server%:/home/projects/%dbsource_project%/backup/mysql.dmp.gz" app/cache/mysql.dmp.gz; fi
    - if [ "yes" = "%run_mysql%" ]; then echo "DROP DATABASE IF EXISTS %database_name%" | mysql -u "root" -p%mysql_root_password% | true; fi
    - if [ "yes" = "%run_mysql%" ]; then echo "CREATE DATABASE %database_name% DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci" | mysql -u "root" -p%mysql_root_password%; fi
    - if [ "yes" = "%run_mysql%" ]; then echo "GRANT ALL PRIVILEGES ON %database_name%.* TO %database_user%@localhost IDENTIFIED BY '%database_password%'" | mysql -u "root" -p%mysql_root_password%; fi
    - if [ "yes" = "%run_mysql%" ]; then echo "GRANT ALL PRIVILEGES ON %database_name%.* TO %database_user%@'%%' IDENTIFIED BY '%database_password%'" | mysql -u "root" -p%mysql_root_password%; fi
    - if [ "yes" = "%run_mysql%" ]; then echo "FLUSH PRIVILEGES" | mysql -u "root" -p%mysql_root_password%; fi
    - if [ "yes" = "%fetch_mysql%" ] && [ "yes" = "%run_mysql%" ]; then zcat "app/cache/mysql.dmp.gz" | mysql "%database_name%" -u "root" -p%mysql_root_password%; fi

build:
  - resource: snippets/composer.yml
  - resource: snippets/doctrine-build.yml
  - resource: snippets/bundler.yml
  - resource: snippets/npm.yml
  - resource: snippets/bower.yml
  - resource: snippets/gulpgrunt.yml
  - steps:
    - app/console oro:assets:install --env=%deploy_symfony_env%
    - app/console fos:js-routing:dump --target=web/js/routes.js --env=%deploy_symfony_env%
  - resource: snippets/assets.yml
  - resource: snippets/appdotphpfix.yml

after_build_success:
  - resource: snippets/package-build.yml

before_deploy:
  - resource: snippets/transmit.yml

deploy:
  - resource: snippets/extract-tar.yml
  - resource: snippets/setup-config.yml
  - resource: snippets/symfony-folders.yml
  - steps:
    - ssh %deploy_server% -p %deploy_port% "sudo rm -Rf /home/projects/%deploy_project%/data/builds/%deploy_timestamp%-%buildtag%/web/media"
    - ssh %deploy_server% -p %deploy_port% "sudo mkdir -p /home/projects/%deploy_project%/data/shared/web/media"
    - ssh %deploy_server% -p %deploy_port% "sudo ln -nfs /home/projects/%deploy_project%/data/shared/web/media /home/projects/%deploy_project%/data/builds/%deploy_timestamp%-%buildtag%/web/media"
    - ssh %deploy_server% -p %deploy_port% "sudo rm -Rf /home/projects/%deploy_project%/data/builds/%deploy_timestamp%-%buildtag%/app/attachment"
    - ssh %deploy_server% -p %deploy_port% "sudo mkdir -p /home/projects/%deploy_project%/data/shared/app/attachment"
    - ssh %deploy_server% -p %deploy_port% "sudo ln -nfs /home/projects/%deploy_project%/data/shared/app/attachment /home/projects/%deploy_project%/data/builds/%deploy_timestamp%-%buildtag%/app/attachment"
    - ssh %deploy_server% -p %deploy_port% "/home/projects/%deploy_project%/data/builds/%deploy_timestamp%-%buildtag%/app/console oro:platform:update --env=%deploy_symfony_env% --force --timeout=3600"
  - resource: snippets/cachewarmup.yml
  - resource: snippets/deploypermissions.yml

after_deploy_success:
  - resource: snippets/clear-opcode-cache.yml
  - steps:
    - ssh %deploy_server% -p %deploy_port% "if [ -d \"/home/projects/%deploy_project%/data/builds/%deploy_timestamp%-%buildtag%/app/DoctrineMigrations\" ]; then sudo -u %deploy_project% /home/projects/%deploy_project%/data/builds/%deploy_timestamp%-%buildtag%/app/console doctrine:migrations:migrate --no-interaction --env=%deploy_symfony_env%; fi"
  - resource: snippets/maintenance.yml
  - resource: snippets/setup-cron.yml
  - resource: snippets/cleanup.yml
